// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package v1

import (
	"github.com/mailru/easyjson/jlexer"
	"github.com/mailru/easyjson/jwriter"
)

func (Order) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*Order) UnmarshalJSON([]byte) error        { return nil }
func (Order) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*Order) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Order *Order

func (OrdersRequest) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*OrdersRequest) UnmarshalJSON([]byte) error        { return nil }
func (OrdersRequest) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*OrdersRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_OrdersRequest *OrdersRequest

func (OrdersResponse) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*OrdersResponse) UnmarshalJSON([]byte) error        { return nil }
func (OrdersResponse) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*OrdersResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_OrdersResponse *OrdersResponse

func (User) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*User) UnmarshalJSON([]byte) error        { return nil }
func (User) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*User) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_User *User

func (UserRequest) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*UserRequest) UnmarshalJSON([]byte) error        { return nil }
func (UserRequest) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*UserRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_UserRequest *UserRequest

func (UserResponse) MarshalJSON() ([]byte, error)       { return nil, nil }
func (*UserResponse) UnmarshalJSON([]byte) error        { return nil }
func (UserResponse) MarshalEasyJSON(w *jwriter.Writer)  {}
func (*UserResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_UserResponse *UserResponse
